schema {
  query: Query
  mutation: Mutation
}

type Query {
  getUser(id: ID!): User
  getDailyIdeas(userId: ID!): [Idea]
  getTopDailyIdeas(userId: ID!): [Idea]
  getTopWeeklyIdeas(userId: ID!): [Idea]
}

type Mutation {
  createUser(username: String!, email: String!): User
  createIdea(userId: ID!, idea: String!, description: String): Idea
  addToDailyIdeas(userId: ID!, ideaId: ID!): User
  addToTopDailyIdeas(userId: ID!, ideaId: ID!): User
  addToTopWeeklyIdeas(userId: ID!, ideaId: ID!): User
  updateDailyIdea(id: ID!, idea: String!, updateIdea: IdeaInput): Idea
  updateTopDailyIdea(id: ID!, idea: String!, updateIdea: IdeaInput): Idea
  updateTopWeeklyIdea(id: ID!, idea: String!, updateIdea: IdeaInput): Idea
}

type Idea {
  id: ID!
  idea: String!
  description: String
  createdAt: AWSDateTime!
}

type User {
  userId: ID!
  username: String!
  email: String!
  dailyIdeas: [Idea]
  topDailyIdeas: [Idea]
  topWeeklyIdeas: [Idea]
}

input IdeaInput {
  id: ID!
  idea: String!
  description: String
  createdAt: AWSDateTime!
}

scalar AWSDateTime
